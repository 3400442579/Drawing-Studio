<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDisplayName" xml:space="preserve">
    <value>Drawing Studio</value>
    <comment>Application display name</comment>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>Drawing Studio</value>
    <comment>Application description</comment>
  </data>
  <data name="ExceptionSettingsStorageExtensionsFileNameIsNullOrEmpty" xml:space="preserve">
    <value>File name is null or empty. Specify a valid file name</value>
    <comment>File name is null or empty to save file in settings storage extensions</comment>
  </data>
  <data name="Settings_Theme.Text" xml:space="preserve">
    <value>Choose Theme</value>
    <comment>Choose theme text for Settings</comment>
  </data>
  <data name="Settings_Theme_Dark.Content" xml:space="preserve">
    <value>Dark</value>
    <comment>Dark theme text for Settings</comment>
  </data>
  <data name="Settings_Theme_Default.Content" xml:space="preserve">
    <value>Windows default</value>
    <comment>Windows default theme text for Settings</comment>
  </data>
  <data name="Settings_Theme_Light.Content" xml:space="preserve">
    <value>Light</value>
    <comment>Light theme text for Settings</comment>
  </data>
  <data name="AboutPage_About.Text" xml:space="preserve">
    <value>About this application</value>
    <comment>About this application title for Settings</comment>
  </data>
  <data name="AboutPage_Description.Text" xml:space="preserve">
    <value>A creative app with intelligence.</value>
    <comment>About this application description for Settings</comment>
  </data>
  <data name="Settings_PrivacyTermsLink.Content" xml:space="preserve">
    <value>Privacy Statement</value>
    <comment>Privacy Statement link content for Settings</comment>
  </data>
  <data name="Settings_PrivacyTermsLink.NavigateUri" xml:space="preserve">
    <value>https://github.com/HHChaos/MyAppPrivacyStatements/blob/master/Drawing%20Studio%20Privacy%20Statement.md</value>
    <comment>Here is your Privacy Statement url for Settings</comment>
  </data>
  <data name="Settings_Personalization.Text" xml:space="preserve">
    <value>Personalization</value>
    <comment>Personalization text for Settings</comment>
  </data>
  <data name="ExceptionEnumToBooleanConverterValueMustBeAnEnum" xml:space="preserve">
    <value>value must be an Enum!</value>
    <comment>Value must be an Enum in enum to boolean converter</comment>
  </data>
  <data name="ExceptionEnumToBooleanConverterParameterMustBeAnEnumName" xml:space="preserve">
    <value>parameter must be an Enum name!</value>
    <comment>Parameter must be an Enum name in enum to boolean converter</comment>
  </data>
  <data name="AboutPage_Developer.Text" xml:space="preserve">
    <value>Developed By : HHChaos</value>
  </data>
  <data name="AboutPage_Libraries.Text" xml:space="preserve">
    <value>Libraries</value>
  </data>
  <data name="AboutPage_SpecialThanks.Text" xml:space="preserve">
    <value>Special thanks</value>
  </data>
  <data name="AboutPage_SpecialThanks_Description.Text" xml:space="preserve">
    <value>The software uses machine learning algorithms to recognize your doodling and to provide you with some drawings to learn.</value>
  </data>
  <data name="AboutPage_SpecialThanks_Google.Text" xml:space="preserve">
    <value>Google Creative Lab : The software uses the Quick, Draw! Dataset(Creative Commons Attribution 4.0 International License) to train neural networks to recognize your doodling，and uses the drawings from AutoDraw(Creative Commons Attribution 4.0 nternational License).</value>
  </data>
  <data name="AboutPage_SpecialThanks_Google_AutoDrawLink.Content" xml:space="preserve">
    <value>AutoDraw</value>
  </data>
  <data name="AboutPage_SpecialThanks_Google_AutoDrawLink.NavigateUri" xml:space="preserve">
    <value>https://www.autodraw.com/</value>
  </data>
  <data name="AboutPage_SpecialThanks_Google_QuickDrawLink.Content" xml:space="preserve">
    <value>The Quick, Draw! Dataset</value>
  </data>
  <data name="AboutPage_SpecialThanks_Google_QuickDrawLink.NavigateUri" xml:space="preserve">
    <value>https://github.com/googlecreativelab/quickdraw-dataset</value>
  </data>
  <data name="AboutPage_SpecialThanks_Justin.Text" xml:space="preserve">
    <value>Justin Liu : Justin is a great uwp developer and designer. His demo application has given me a lot of help with its great UI design and smooth animations!</value>
  </data>
  <data name="AboutPage_SpecialThanks_ML.Text" xml:space="preserve">
    <value>Microsoft ML.NET : ML.NET is an open source and cross-platform machine learning framework for .NET.</value>
  </data>
  <data name="AboutPage_SpecialThanks_ML_Link.Content" xml:space="preserve">
    <value>ML.NET</value>
  </data>
  <data name="AboutPage_SpecialThanks_ML_Link.NavigateUri" xml:space="preserve">
    <value>https://github.com/dotnet/machinelearning</value>
  </data>
  <data name="AboutPage_SpecialThanks_SmallTitle.Text" xml:space="preserve">
    <value>Thanks here :</value>
  </data>
  <data name="AnimSettingsPage_PlayerSettings.Text" xml:space="preserve">
    <value>Player Settings</value>
  </data>
  <data name="AnimSettingsPage_PlayerSpeed.Text" xml:space="preserve">
    <value>Play Speed :</value>
  </data>
  <data name="AnimSettingsPage_PlayerSpeed_Fast.Text" xml:space="preserve">
    <value>Fast</value>
  </data>
  <data name="AnimSettingsPage_PlayerSpeed_Slow.Text" xml:space="preserve">
    <value>Slow</value>
  </data>
  <data name="InkSaveNothing" xml:space="preserve">
    <value>You didn't draw anything!</value>
  </data>
  <data name="InkSaveSuggestedFileName" xml:space="preserve">
    <value>My_Drawing</value>
  </data>
  <data name="MainPage_DrawingTip.Text" xml:space="preserve">
    <value>Maybe you're drawing</value>
  </data>
  <data name="MainPage_DrawingTip_Or.Text" xml:space="preserve">
    <value>or </value>
  </data>
  <data name="MLHelperDownTip" xml:space="preserve">
    <value>Sorry, the prediction engine is down, trying to restart it!</value>
  </data>
  <data name="MLHelperInitedMsg" xml:space="preserve">
    <value>The prediction engine has been loaded, Enjoy it!</value>
  </data>
  <data name="MLHelperLoadingTip" xml:space="preserve">
    <value>The prediction engine is loading...</value>
  </data>
  <data name="MLHelperNotLoadedTip" xml:space="preserve">
    <value>The prediction engine has not been loaded yet, please wait...</value>
  </data>
  <data name="MyFavoriteDrawingsAddedTip" xml:space="preserve">
    <value>It has been added to my favorite drawings!</value>
  </data>
  <data name="MyFavoriteDrawingsPage_Title.Text" xml:space="preserve">
    <value>My Library</value>
  </data>
  <data name="MyFavoriteDrawingsRemovedTip" xml:space="preserve">
    <value>It has been removed from my favorite drawings.</value>
  </data>
  <data name="Settings_Other.Text" xml:space="preserve">
    <value>Other</value>
  </data>
  <data name="Settings_Other_Description.Text" xml:space="preserve">
    <value>If the app doesn't work, click here!</value>
  </data>
  <data name="Settings_ShowWelcomeScreen.Text" xml:space="preserve">
    <value>Show welcome screen</value>
  </data>
  <data name="Settings_ShowWelcomeScreen_Description.Text" xml:space="preserve">
    <value>See start-screen content when Drawing Studio launches.</value>
  </data>
  <data name="ShellPage_About.Text" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="ShellPage_MyLibrary.Text" xml:space="preserve">
    <value>My Library</value>
  </data>
  <data name="ShellPage_RateApp.Text" xml:space="preserve">
    <value>Rate App</value>
  </data>
  <data name="ShellPage_Settings.Text" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ShellPage_WelcomeScreen.Text" xml:space="preserve">
    <value>Welcome Screen</value>
  </data>
  <data name="StartScreenPage_DrawIt.Text" xml:space="preserve">
    <value>Draw it!</value>
  </data>
  <data name="StartScreenPage_DrawIt_Description.Text" xml:space="preserve">
    <value>Just draw something, let AI help you find inspiration!</value>
  </data>
  <data name="StartScreenPage_Guide.Text" xml:space="preserve">
    <value>How to use Drawing Studio?</value>
  </data>
  <data name="StartScreenPage_MyLibrary.Text" xml:space="preserve">
    <value>My Library</value>
  </data>
  <data name="StartScreenPage_MyLibrary_Description.Text" xml:space="preserve">
    <value>Here are your favorite drawings, pick one to learn!</value>
  </data>
  <data name="StartScreenPage_ShowWelcomeScreen.Content" xml:space="preserve">
    <value>Show welcome screen</value>
  </data>
  <data name="StartScreenPage_Welcome.Text" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="UnpackResPage_Tip.Text" xml:space="preserve">
    <value>Please wait to unzip the resource...</value>
  </data>
  <data name="key_aircraft_carrier" xml:space="preserve">
    <value>aircraft carrier</value>
  </data>
  <data name="key_airplane" xml:space="preserve">
    <value>airplane</value>
  </data>
  <data name="key_alarm_clock" xml:space="preserve">
    <value>alarm clock</value>
  </data>
  <data name="key_ambulance" xml:space="preserve">
    <value>ambulance</value>
  </data>
  <data name="key_angel" xml:space="preserve">
    <value>angel</value>
  </data>
  <data name="key_animal_migration" xml:space="preserve">
    <value>animal migration</value>
  </data>
  <data name="key_ant" xml:space="preserve">
    <value>ant</value>
  </data>
  <data name="key_anvil" xml:space="preserve">
    <value>anvil</value>
  </data>
  <data name="key_apple" xml:space="preserve">
    <value>apple</value>
  </data>
  <data name="key_arm" xml:space="preserve">
    <value>arm</value>
  </data>
  <data name="key_asparagus" xml:space="preserve">
    <value>asparagus</value>
  </data>
  <data name="key_axe" xml:space="preserve">
    <value>axe</value>
  </data>
  <data name="key_backpack" xml:space="preserve">
    <value>backpack</value>
  </data>
  <data name="key_banana" xml:space="preserve">
    <value>banana</value>
  </data>
  <data name="key_bandage" xml:space="preserve">
    <value>bandage</value>
  </data>
  <data name="key_barn" xml:space="preserve">
    <value>barn</value>
  </data>
  <data name="key_baseball_bat" xml:space="preserve">
    <value>baseball bat</value>
  </data>
  <data name="key_baseball" xml:space="preserve">
    <value>baseball</value>
  </data>
  <data name="key_basket" xml:space="preserve">
    <value>basket</value>
  </data>
  <data name="key_basketball" xml:space="preserve">
    <value>basketball</value>
  </data>
  <data name="key_bat" xml:space="preserve">
    <value>bat</value>
  </data>
  <data name="key_bathtub" xml:space="preserve">
    <value>bathtub</value>
  </data>
  <data name="key_beach" xml:space="preserve">
    <value>beach</value>
  </data>
  <data name="key_bear" xml:space="preserve">
    <value>bear</value>
  </data>
  <data name="key_beard" xml:space="preserve">
    <value>beard</value>
  </data>
  <data name="key_bed" xml:space="preserve">
    <value>bed</value>
  </data>
  <data name="key_bee" xml:space="preserve">
    <value>bee</value>
  </data>
  <data name="key_belt" xml:space="preserve">
    <value>belt</value>
  </data>
  <data name="key_bench" xml:space="preserve">
    <value>bench</value>
  </data>
  <data name="key_bicycle" xml:space="preserve">
    <value>bicycle</value>
  </data>
  <data name="key_binoculars" xml:space="preserve">
    <value>binoculars</value>
  </data>
  <data name="key_bird" xml:space="preserve">
    <value>bird</value>
  </data>
  <data name="key_birthday_cake" xml:space="preserve">
    <value>birthday cake</value>
  </data>
  <data name="key_blackberry" xml:space="preserve">
    <value>blackberry</value>
  </data>
  <data name="key_blueberry" xml:space="preserve">
    <value>blueberry</value>
  </data>
  <data name="key_book" xml:space="preserve">
    <value>book</value>
  </data>
  <data name="key_boomerang" xml:space="preserve">
    <value>boomerang</value>
  </data>
  <data name="key_bracelet" xml:space="preserve">
    <value>bracelet</value>
  </data>
  <data name="key_brain" xml:space="preserve">
    <value>brain</value>
  </data>
  <data name="key_bread" xml:space="preserve">
    <value>bread</value>
  </data>
  <data name="key_bridge" xml:space="preserve">
    <value>bridge</value>
  </data>
  <data name="key_broccoli" xml:space="preserve">
    <value>broccoli</value>
  </data>
  <data name="key_broom" xml:space="preserve">
    <value>broom</value>
  </data>
  <data name="key_bucket" xml:space="preserve">
    <value>bucket</value>
  </data>
  <data name="key_bulldozer" xml:space="preserve">
    <value>bulldozer</value>
  </data>
  <data name="key_bus" xml:space="preserve">
    <value>bus</value>
  </data>
  <data name="key_bush" xml:space="preserve">
    <value>bush</value>
  </data>
  <data name="key_butterfly" xml:space="preserve">
    <value>butterfly</value>
  </data>
  <data name="key_cactus" xml:space="preserve">
    <value>cactus</value>
  </data>
  <data name="key_cake" xml:space="preserve">
    <value>cake</value>
  </data>
  <data name="key_calculator" xml:space="preserve">
    <value>calculator</value>
  </data>
  <data name="key_calendar" xml:space="preserve">
    <value>calendar</value>
  </data>
  <data name="key_camel" xml:space="preserve">
    <value>camel</value>
  </data>
  <data name="key_camera" xml:space="preserve">
    <value>camera</value>
  </data>
  <data name="key_camouflage" xml:space="preserve">
    <value>camouflage</value>
  </data>
  <data name="key_campfire" xml:space="preserve">
    <value>campfire</value>
  </data>
  <data name="key_candle" xml:space="preserve">
    <value>candle</value>
  </data>
  <data name="key_cannon" xml:space="preserve">
    <value>cannon</value>
  </data>
  <data name="key_canoe" xml:space="preserve">
    <value>canoe</value>
  </data>
  <data name="key_car" xml:space="preserve">
    <value>car</value>
  </data>
  <data name="key_carrot" xml:space="preserve">
    <value>carrot</value>
  </data>
  <data name="key_castle" xml:space="preserve">
    <value>castle</value>
  </data>
  <data name="key_cat" xml:space="preserve">
    <value>cat</value>
  </data>
  <data name="key_ceiling_fan" xml:space="preserve">
    <value>ceiling fan</value>
  </data>
  <data name="key_cell_phone" xml:space="preserve">
    <value>cell phone</value>
  </data>
  <data name="key_cello" xml:space="preserve">
    <value>cello</value>
  </data>
  <data name="key_chair" xml:space="preserve">
    <value>chair</value>
  </data>
  <data name="key_chandelier" xml:space="preserve">
    <value>chandelier</value>
  </data>
  <data name="key_circle" xml:space="preserve">
    <value>circle</value>
  </data>
  <data name="key_clarinet" xml:space="preserve">
    <value>clarinet</value>
  </data>
  <data name="key_clock" xml:space="preserve">
    <value>clock</value>
  </data>
  <data name="key_cloud" xml:space="preserve">
    <value>cloud</value>
  </data>
  <data name="key_coffee_cup" xml:space="preserve">
    <value>coffee cup</value>
  </data>
  <data name="key_compass" xml:space="preserve">
    <value>compass</value>
  </data>
  <data name="key_computer" xml:space="preserve">
    <value>computer</value>
  </data>
  <data name="key_cookie" xml:space="preserve">
    <value>cookie</value>
  </data>
  <data name="key_cooler" xml:space="preserve">
    <value>cooler</value>
  </data>
  <data name="key_couch" xml:space="preserve">
    <value>couch</value>
  </data>
  <data name="key_cow" xml:space="preserve">
    <value>cow</value>
  </data>
  <data name="key_crab" xml:space="preserve">
    <value>crab</value>
  </data>
  <data name="key_crayon" xml:space="preserve">
    <value>crayon</value>
  </data>
  <data name="key_crocodile" xml:space="preserve">
    <value>crocodile</value>
  </data>
  <data name="key_crown" xml:space="preserve">
    <value>crown</value>
  </data>
  <data name="key_cruise_ship" xml:space="preserve">
    <value>cruise ship</value>
  </data>
  <data name="key_cup" xml:space="preserve">
    <value>cup</value>
  </data>
  <data name="key_diamond" xml:space="preserve">
    <value>diamond</value>
  </data>
  <data name="key_dishwasher" xml:space="preserve">
    <value>dishwasher</value>
  </data>
  <data name="key_diving_board" xml:space="preserve">
    <value>diving board</value>
  </data>
  <data name="key_dog" xml:space="preserve">
    <value>dog</value>
  </data>
  <data name="key_dolphin" xml:space="preserve">
    <value>dolphin</value>
  </data>
  <data name="key_donut" xml:space="preserve">
    <value>donut</value>
  </data>
  <data name="key_door" xml:space="preserve">
    <value>door</value>
  </data>
  <data name="key_dragon" xml:space="preserve">
    <value>dragon</value>
  </data>
  <data name="key_dresser" xml:space="preserve">
    <value>dresser</value>
  </data>
  <data name="key_drill" xml:space="preserve">
    <value>drill</value>
  </data>
  <data name="key_drums" xml:space="preserve">
    <value>drums</value>
  </data>
  <data name="key_duck" xml:space="preserve">
    <value>duck</value>
  </data>
  <data name="key_dumbbell" xml:space="preserve">
    <value>dumbbell</value>
  </data>
  <data name="key_ear" xml:space="preserve">
    <value>ear</value>
  </data>
  <data name="key_elbow" xml:space="preserve">
    <value>elbow</value>
  </data>
  <data name="key_elephant" xml:space="preserve">
    <value>elephant</value>
  </data>
  <data name="key_envelope" xml:space="preserve">
    <value>envelope</value>
  </data>
  <data name="key_eraser" xml:space="preserve">
    <value>eraser</value>
  </data>
  <data name="key_eye" xml:space="preserve">
    <value>eye</value>
  </data>
  <data name="key_eyeglasses" xml:space="preserve">
    <value>eyeglasses</value>
  </data>
  <data name="key_fan" xml:space="preserve">
    <value>fan</value>
  </data>
  <data name="key_feather" xml:space="preserve">
    <value>feather</value>
  </data>
  <data name="key_fence" xml:space="preserve">
    <value>fence</value>
  </data>
  <data name="key_finger" xml:space="preserve">
    <value>finger</value>
  </data>
  <data name="key_fire_hydrant" xml:space="preserve">
    <value>fire hydrant</value>
  </data>
  <data name="key_fireplace" xml:space="preserve">
    <value>fireplace</value>
  </data>
  <data name="key_fish" xml:space="preserve">
    <value>fish</value>
  </data>
  <data name="key_flamingo" xml:space="preserve">
    <value>flamingo</value>
  </data>
  <data name="key_flashlight" xml:space="preserve">
    <value>flashlight</value>
  </data>
  <data name="key_flip_flops" xml:space="preserve">
    <value>flip flops</value>
  </data>
  <data name="key_floor_lamp" xml:space="preserve">
    <value>floor lamp</value>
  </data>
  <data name="key_flower" xml:space="preserve">
    <value>flower</value>
  </data>
  <data name="key_flying_saucer" xml:space="preserve">
    <value>flying saucer</value>
  </data>
  <data name="key_foot" xml:space="preserve">
    <value>foot</value>
  </data>
  <data name="key_fork" xml:space="preserve">
    <value>fork</value>
  </data>
  <data name="key_frog" xml:space="preserve">
    <value>frog</value>
  </data>
  <data name="key_frying_pan" xml:space="preserve">
    <value>frying pan</value>
  </data>
  <data name="key_garden_hose" xml:space="preserve">
    <value>garden hose</value>
  </data>
  <data name="key_garden" xml:space="preserve">
    <value>garden</value>
  </data>
  <data name="key_giraffe" xml:space="preserve">
    <value>giraffe</value>
  </data>
  <data name="key_goatee" xml:space="preserve">
    <value>goatee</value>
  </data>
  <data name="key_golf_club" xml:space="preserve">
    <value>golf club</value>
  </data>
  <data name="key_grapes" xml:space="preserve">
    <value>grapes</value>
  </data>
  <data name="key_grass" xml:space="preserve">
    <value>grass</value>
  </data>
  <data name="key_guitar" xml:space="preserve">
    <value>guitar</value>
  </data>
  <data name="key_hamburger" xml:space="preserve">
    <value>hamburger</value>
  </data>
  <data name="key_hammer" xml:space="preserve">
    <value>hammer</value>
  </data>
  <data name="key_hand" xml:space="preserve">
    <value>hand</value>
  </data>
  <data name="key_harp" xml:space="preserve">
    <value>harp</value>
  </data>
  <data name="key_hat" xml:space="preserve">
    <value>hat</value>
  </data>
  <data name="key_headphones" xml:space="preserve">
    <value>headphones</value>
  </data>
  <data name="key_hedgehog" xml:space="preserve">
    <value>hedgehog</value>
  </data>
  <data name="key_helicopter" xml:space="preserve">
    <value>helicopter</value>
  </data>
  <data name="key_helmet" xml:space="preserve">
    <value>helmet</value>
  </data>
  <data name="key_hexagon" xml:space="preserve">
    <value>hexagon</value>
  </data>
  <data name="key_hockey_puck" xml:space="preserve">
    <value>hockey puck</value>
  </data>
  <data name="key_hockey_stick" xml:space="preserve">
    <value>hockey stick</value>
  </data>
  <data name="key_horse" xml:space="preserve">
    <value>horse</value>
  </data>
  <data name="key_hospital" xml:space="preserve">
    <value>hospital</value>
  </data>
  <data name="key_hot_air_balloon" xml:space="preserve">
    <value>hot air balloon</value>
  </data>
  <data name="key_hot_dog" xml:space="preserve">
    <value>hot dog</value>
  </data>
  <data name="key_hot_tub" xml:space="preserve">
    <value>hot tub</value>
  </data>
  <data name="key_hourglass" xml:space="preserve">
    <value>hourglass</value>
  </data>
  <data name="key_house_plant" xml:space="preserve">
    <value>house plant</value>
  </data>
  <data name="key_house" xml:space="preserve">
    <value>house</value>
  </data>
  <data name="key_ice_cream" xml:space="preserve">
    <value>ice cream</value>
  </data>
  <data name="key_jacket" xml:space="preserve">
    <value>jacket</value>
  </data>
  <data name="key_jail" xml:space="preserve">
    <value>jail</value>
  </data>
  <data name="key_kangaroo" xml:space="preserve">
    <value>kangaroo</value>
  </data>
  <data name="key_key" xml:space="preserve">
    <value>key</value>
  </data>
  <data name="key_keyboard" xml:space="preserve">
    <value>keyboard</value>
  </data>
  <data name="key_knee" xml:space="preserve">
    <value>knee</value>
  </data>
  <data name="key_ladder" xml:space="preserve">
    <value>ladder</value>
  </data>
  <data name="key_lantern" xml:space="preserve">
    <value>lantern</value>
  </data>
  <data name="key_laptop" xml:space="preserve">
    <value>laptop</value>
  </data>
  <data name="key_leaf" xml:space="preserve">
    <value>leaf</value>
  </data>
  <data name="key_leg" xml:space="preserve">
    <value>leg</value>
  </data>
  <data name="key_light_bulb" xml:space="preserve">
    <value>light bulb</value>
  </data>
  <data name="key_lighthouse" xml:space="preserve">
    <value>lighthouse</value>
  </data>
  <data name="key_lightning" xml:space="preserve">
    <value>lightning</value>
  </data>
  <data name="key_line" xml:space="preserve">
    <value>line</value>
  </data>
  <data name="key_lion" xml:space="preserve">
    <value>lion</value>
  </data>
  <data name="key_lipstick" xml:space="preserve">
    <value>lipstick</value>
  </data>
  <data name="key_lobster" xml:space="preserve">
    <value>lobster</value>
  </data>
  <data name="key_lollipop" xml:space="preserve">
    <value>lollipop</value>
  </data>
  <data name="key_mailbox" xml:space="preserve">
    <value>mailbox</value>
  </data>
  <data name="key_map" xml:space="preserve">
    <value>map</value>
  </data>
  <data name="key_marker" xml:space="preserve">
    <value>marker</value>
  </data>
  <data name="key_matches" xml:space="preserve">
    <value>matches</value>
  </data>
  <data name="key_megaphone" xml:space="preserve">
    <value>megaphone</value>
  </data>
  <data name="key_mermaid" xml:space="preserve">
    <value>mermaid</value>
  </data>
  <data name="key_microphone" xml:space="preserve">
    <value>microphone</value>
  </data>
  <data name="key_microwave" xml:space="preserve">
    <value>microwave</value>
  </data>
  <data name="key_monkey" xml:space="preserve">
    <value>monkey</value>
  </data>
  <data name="key_moon" xml:space="preserve">
    <value>moon</value>
  </data>
  <data name="key_mosquito" xml:space="preserve">
    <value>mosquito</value>
  </data>
  <data name="key_motorbike" xml:space="preserve">
    <value>motorbike</value>
  </data>
  <data name="key_mountain" xml:space="preserve">
    <value>mountain</value>
  </data>
  <data name="key_mouse" xml:space="preserve">
    <value>mouse</value>
  </data>
  <data name="key_moustache" xml:space="preserve">
    <value>moustache</value>
  </data>
  <data name="key_mouth" xml:space="preserve">
    <value>mouth</value>
  </data>
  <data name="key_mug" xml:space="preserve">
    <value>mug</value>
  </data>
  <data name="key_mushroom" xml:space="preserve">
    <value>mushroom</value>
  </data>
  <data name="key_nail" xml:space="preserve">
    <value>nail</value>
  </data>
  <data name="key_necklace" xml:space="preserve">
    <value>necklace</value>
  </data>
  <data name="key_nose" xml:space="preserve">
    <value>nose</value>
  </data>
  <data name="key_ocean" xml:space="preserve">
    <value>ocean</value>
  </data>
  <data name="key_octagon" xml:space="preserve">
    <value>octagon</value>
  </data>
  <data name="key_octopus" xml:space="preserve">
    <value>octopus</value>
  </data>
  <data name="key_onion" xml:space="preserve">
    <value>onion</value>
  </data>
  <data name="key_oven" xml:space="preserve">
    <value>oven</value>
  </data>
  <data name="key_owl" xml:space="preserve">
    <value>owl</value>
  </data>
  <data name="key_paint_can" xml:space="preserve">
    <value>paint can</value>
  </data>
  <data name="key_paintbrush" xml:space="preserve">
    <value>paintbrush</value>
  </data>
  <data name="key_palm_tree" xml:space="preserve">
    <value>palm tree</value>
  </data>
  <data name="key_panda" xml:space="preserve">
    <value>panda</value>
  </data>
  <data name="key_pants" xml:space="preserve">
    <value>pants</value>
  </data>
  <data name="key_paper_clip" xml:space="preserve">
    <value>paper clip</value>
  </data>
  <data name="key_parachute" xml:space="preserve">
    <value>parachute</value>
  </data>
  <data name="key_parrot" xml:space="preserve">
    <value>parrot</value>
  </data>
  <data name="key_passport" xml:space="preserve">
    <value>passport</value>
  </data>
  <data name="key_peanut" xml:space="preserve">
    <value>peanut</value>
  </data>
  <data name="key_pear" xml:space="preserve">
    <value>pear</value>
  </data>
  <data name="key_peas" xml:space="preserve">
    <value>peas</value>
  </data>
  <data name="key_pencil" xml:space="preserve">
    <value>pencil</value>
  </data>
  <data name="key_penguin" xml:space="preserve">
    <value>penguin</value>
  </data>
  <data name="key_piano" xml:space="preserve">
    <value>piano</value>
  </data>
  <data name="key_pickup_truck" xml:space="preserve">
    <value>pickup truck</value>
  </data>
  <data name="key_picture_frame" xml:space="preserve">
    <value>picture frame</value>
  </data>
  <data name="key_pig" xml:space="preserve">
    <value>pig</value>
  </data>
  <data name="key_pillow" xml:space="preserve">
    <value>pillow</value>
  </data>
  <data name="key_pineapple" xml:space="preserve">
    <value>pineapple</value>
  </data>
  <data name="key_pizza" xml:space="preserve">
    <value>pizza</value>
  </data>
  <data name="key_pliers" xml:space="preserve">
    <value>pliers</value>
  </data>
  <data name="key_police_car" xml:space="preserve">
    <value>police car</value>
  </data>
  <data name="key_pond" xml:space="preserve">
    <value>pond</value>
  </data>
  <data name="key_pool" xml:space="preserve">
    <value>pool</value>
  </data>
  <data name="key_popsicle" xml:space="preserve">
    <value>popsicle</value>
  </data>
  <data name="key_postcard" xml:space="preserve">
    <value>postcard</value>
  </data>
  <data name="key_potato" xml:space="preserve">
    <value>potato</value>
  </data>
  <data name="key_power_outlet" xml:space="preserve">
    <value>power outlet</value>
  </data>
  <data name="key_purse" xml:space="preserve">
    <value>purse</value>
  </data>
  <data name="key_rabbit" xml:space="preserve">
    <value>rabbit</value>
  </data>
  <data name="key_raccoon" xml:space="preserve">
    <value>raccoon</value>
  </data>
  <data name="key_radio" xml:space="preserve">
    <value>radio</value>
  </data>
  <data name="key_rain" xml:space="preserve">
    <value>rain</value>
  </data>
  <data name="key_rainbow" xml:space="preserve">
    <value>rainbow</value>
  </data>
  <data name="key_rake" xml:space="preserve">
    <value>rake</value>
  </data>
  <data name="key_remote_control" xml:space="preserve">
    <value>remote control</value>
  </data>
  <data name="key_rhinoceros" xml:space="preserve">
    <value>rhinoceros</value>
  </data>
  <data name="key_river" xml:space="preserve">
    <value>river</value>
  </data>
  <data name="key_roller_coaster" xml:space="preserve">
    <value>roller coaster</value>
  </data>
  <data name="key_sailboat" xml:space="preserve">
    <value>sailboat</value>
  </data>
  <data name="key_sandwich" xml:space="preserve">
    <value>sandwich</value>
  </data>
  <data name="key_saw" xml:space="preserve">
    <value>saw</value>
  </data>
  <data name="key_saxophone" xml:space="preserve">
    <value>saxophone</value>
  </data>
  <data name="key_school_bus" xml:space="preserve">
    <value>school bus</value>
  </data>
  <data name="key_scissors" xml:space="preserve">
    <value>scissors</value>
  </data>
  <data name="key_scorpion" xml:space="preserve">
    <value>scorpion</value>
  </data>
  <data name="key_screwdriver" xml:space="preserve">
    <value>screwdriver</value>
  </data>
  <data name="key_sea_turtle" xml:space="preserve">
    <value>sea turtle</value>
  </data>
  <data name="key_shark" xml:space="preserve">
    <value>shark</value>
  </data>
  <data name="key_sheep" xml:space="preserve">
    <value>sheep</value>
  </data>
  <data name="key_shoe" xml:space="preserve">
    <value>shoe</value>
  </data>
  <data name="key_shorts" xml:space="preserve">
    <value>shorts</value>
  </data>
  <data name="key_shovel" xml:space="preserve">
    <value>shovel</value>
  </data>
  <data name="key_sink" xml:space="preserve">
    <value>sink</value>
  </data>
  <data name="key_skateboard" xml:space="preserve">
    <value>skateboard</value>
  </data>
  <data name="key_skull" xml:space="preserve">
    <value>skull</value>
  </data>
  <data name="key_skyscraper" xml:space="preserve">
    <value>skyscraper</value>
  </data>
  <data name="key_sleeping_bag" xml:space="preserve">
    <value>sleeping bag</value>
  </data>
  <data name="key_smiley_face" xml:space="preserve">
    <value>smiley face</value>
  </data>
  <data name="key_snail" xml:space="preserve">
    <value>snail</value>
  </data>
  <data name="key_snake" xml:space="preserve">
    <value>snake</value>
  </data>
  <data name="key_snorkel" xml:space="preserve">
    <value>snorkel</value>
  </data>
  <data name="key_snowflake" xml:space="preserve">
    <value>snowflake</value>
  </data>
  <data name="key_snowman" xml:space="preserve">
    <value>snowman</value>
  </data>
  <data name="key_soccer_ball" xml:space="preserve">
    <value>soccer ball</value>
  </data>
  <data name="key_sock" xml:space="preserve">
    <value>sock</value>
  </data>
  <data name="key_speedboat" xml:space="preserve">
    <value>speedboat</value>
  </data>
  <data name="key_spider" xml:space="preserve">
    <value>spider</value>
  </data>
  <data name="key_spoon" xml:space="preserve">
    <value>spoon</value>
  </data>
  <data name="key_spreadsheet" xml:space="preserve">
    <value>spreadsheet</value>
  </data>
  <data name="key_square" xml:space="preserve">
    <value>square</value>
  </data>
  <data name="key_squiggle" xml:space="preserve">
    <value>squiggle</value>
  </data>
  <data name="key_squirrel" xml:space="preserve">
    <value>squirrel</value>
  </data>
  <data name="key_stairs" xml:space="preserve">
    <value>stairs</value>
  </data>
  <data name="key_star" xml:space="preserve">
    <value>star</value>
  </data>
  <data name="key_steak" xml:space="preserve">
    <value>steak</value>
  </data>
  <data name="key_stereo" xml:space="preserve">
    <value>stereo</value>
  </data>
  <data name="key_stethoscope" xml:space="preserve">
    <value>stethoscope</value>
  </data>
  <data name="key_stitches" xml:space="preserve">
    <value>stitches</value>
  </data>
  <data name="key_stop_sign" xml:space="preserve">
    <value>stop sign</value>
  </data>
  <data name="key_stove" xml:space="preserve">
    <value>stove</value>
  </data>
  <data name="key_strawberry" xml:space="preserve">
    <value>strawberry</value>
  </data>
  <data name="key_streetlight" xml:space="preserve">
    <value>streetlight</value>
  </data>
  <data name="key_string_bean" xml:space="preserve">
    <value>string bean</value>
  </data>
  <data name="key_submarine" xml:space="preserve">
    <value>submarine</value>
  </data>
  <data name="key_suitcase" xml:space="preserve">
    <value>suitcase</value>
  </data>
  <data name="key_sun" xml:space="preserve">
    <value>sun</value>
  </data>
  <data name="key_swan" xml:space="preserve">
    <value>swan</value>
  </data>
  <data name="key_sweater" xml:space="preserve">
    <value>sweater</value>
  </data>
  <data name="key_swing_set" xml:space="preserve">
    <value>swing set</value>
  </data>
  <data name="key_sword" xml:space="preserve">
    <value>sword</value>
  </data>
  <data name="key_syringe" xml:space="preserve">
    <value>syringe</value>
  </data>
  <data name="key_t-shirt" xml:space="preserve">
    <value>t-shirt</value>
  </data>
  <data name="key_table" xml:space="preserve">
    <value>table</value>
  </data>
  <data name="key_teapot" xml:space="preserve">
    <value>teapot</value>
  </data>
  <data name="key_teddy-bear" xml:space="preserve">
    <value>teddy-bear</value>
  </data>
  <data name="key_telephone" xml:space="preserve">
    <value>telephone</value>
  </data>
  <data name="key_television" xml:space="preserve">
    <value>television</value>
  </data>
  <data name="key_tennis_racquet" xml:space="preserve">
    <value>tennis racquet</value>
  </data>
  <data name="key_tent" xml:space="preserve">
    <value>tent</value>
  </data>
  <data name="key_tiger" xml:space="preserve">
    <value>tiger</value>
  </data>
  <data name="key_toaster" xml:space="preserve">
    <value>toaster</value>
  </data>
  <data name="key_toe" xml:space="preserve">
    <value>toe</value>
  </data>
  <data name="key_toilet" xml:space="preserve">
    <value>toilet</value>
  </data>
  <data name="key_tooth" xml:space="preserve">
    <value>tooth</value>
  </data>
  <data name="key_toothbrush" xml:space="preserve">
    <value>toothbrush</value>
  </data>
  <data name="key_toothpaste" xml:space="preserve">
    <value>toothpaste</value>
  </data>
  <data name="key_tornado" xml:space="preserve">
    <value>tornado</value>
  </data>
  <data name="key_tractor" xml:space="preserve">
    <value>tractor</value>
  </data>
  <data name="key_traffic_light" xml:space="preserve">
    <value>traffic light</value>
  </data>
  <data name="key_train" xml:space="preserve">
    <value>train</value>
  </data>
  <data name="key_tree" xml:space="preserve">
    <value>tree</value>
  </data>
  <data name="key_triangle" xml:space="preserve">
    <value>triangle</value>
  </data>
  <data name="key_trombone" xml:space="preserve">
    <value>trombone</value>
  </data>
  <data name="key_truck" xml:space="preserve">
    <value>truck</value>
  </data>
  <data name="key_trumpet" xml:space="preserve">
    <value>trumpet</value>
  </data>
  <data name="key_umbrella" xml:space="preserve">
    <value>umbrella</value>
  </data>
  <data name="key_underwear" xml:space="preserve">
    <value>underwear</value>
  </data>
  <data name="key_van" xml:space="preserve">
    <value>van</value>
  </data>
  <data name="key_vase" xml:space="preserve">
    <value>vase</value>
  </data>
  <data name="key_violin" xml:space="preserve">
    <value>violin</value>
  </data>
  <data name="key_washing_machine" xml:space="preserve">
    <value>washing machine</value>
  </data>
  <data name="key_watermelon" xml:space="preserve">
    <value>watermelon</value>
  </data>
  <data name="key_whale" xml:space="preserve">
    <value>whale</value>
  </data>
  <data name="key_wheel" xml:space="preserve">
    <value>wheel</value>
  </data>
  <data name="key_windmill" xml:space="preserve">
    <value>windmill</value>
  </data>
  <data name="key_wine_bottle" xml:space="preserve">
    <value>wine bottle</value>
  </data>
  <data name="key_wine_glass" xml:space="preserve">
    <value>wine glass</value>
  </data>
</root>